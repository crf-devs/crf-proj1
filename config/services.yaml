# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    app.most_important_skills_limit: 6 # used for separing data in the planning
    app.most_important_skills_to_display: 3 # used for displaying a badge near the user name
    app.available_skills:
        # Caution: the order matters for the planning display
        ci_bspp:  CI Réseau BSPP
        ci_samu: CI Réseau Samu
        ch_vpsp: Chauffeur VPSP
        ci: CI
        pse2: PSE2
        pse1: PSE1
        ch_vl: Chauffeur VL
        infirmier: Infirmier.e local.e
        ce_maraude: Chef.fe d'équipe maraudes
        solidar: Solidar
        maraudeur: Maraudeur.se
        tsa_coreg: TSA / Coreg
        logisticien: Logisticien.ne Croix-Rouge
        resp_perm_soc: Responsable Permanence Sociale
        anim_fle: Animateur.rice de cours de FLE
        psc1: PSC1
        nouveau: Nouveau bénévole

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $isDebug: '%kernel.debug%'
            $availableSkillSets: "%app.available_skills%"
            $importantSkillsLimit: "%app.most_important_skills_limit%"
            $importantSkillsToDisplayLimit: "%app.most_important_skills_to_display%"

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/*"
        exclude: "../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}"

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: "../src/Controller"
        tags: ["controller.service_arguments"]
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\DataFixtures\ApplicationFixtures:
        arguments:
            $nbUsers: '%env(int:APP_NB_USERS)%'
            $nbAvailabilities: '%env(int:APP_NB_AVAILABILITIES)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
             - !service { class: PDO, factory: ['@database_connection', 'getWrappedConnection'] }
            # If you get transaction issues (e.g. after login) uncomment the line below
             - { lock_mode: 1 }
