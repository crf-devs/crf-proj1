version: "3.7"

services:
  traefik:
    image: traefik:1.7-alpine
    ports:
      - '7500:80'
      - '7583:443'
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=9000'
      - 'traefik.frontend.rule=Host:traefik.vcap.me'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik/traefik.toml:/etc/traefik/traefik.toml
      - ./.cache/ssl:/etc/ssl:ro

  wait:
    image: martin/wait

  postgres:
    image: postgres:11.4-alpine
    environment:
      - POSTGRES_DB=resop
      - POSTGRES_USER=resop
      - POSTGRES_PASSWORD=postgrespwd

  adminer:
    image: adminer
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=8080'
      - 'traefik.frontend.rule=Host:adminer.vcap.me'

  nginx:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
      target: withoutsources
    volumes:
      - ./public:/srv/public:ro
    depends_on:
      - fpm
    labels:
      - 'traefik.enable=true'
      - 'traefik.port=80'
      - 'traefik.frontend.rule=Host:resop.vcap.me'

  fpm:
    build:
      context: .
      dockerfile: docker/php-flex/Dockerfile
      target: withoutsources-fpm
      args:
        - DEBUG_TOOLS=true
    volumes:
      - ./:/srv
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1

  tools:
    build:
      context: .
      dockerfile: docker/php-flex/Dockerfile
      target: withoutsources
      args:
        - DEBUG_TOOLS=true
    init: true
    volumes:
      - ./:/srv
    environment:
      - APP_ENV=dev
      - APP_DEBUG=1
      - PANTHER_CHROME_DRIVER_BINARY=/usr/bin/chromedriver
    ulimits:
      nofile:
        soft: "65536"
        hard: "65536"

  node:
    image: node:13-alpine
    init: true
    working_dir: /srv
    # command: yarn encore dev --watch # Uncomment and add the "node" service in "make start" in order to watch webpack updates
    environment:
      - NODE_SASS_PLATFORM=alpine
      - NODE_ENV=dev
    volumes:
      - ./:/srv
